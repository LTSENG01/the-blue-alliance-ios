//
// TBAEliminationAlliance.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class TBAEliminationAlliance: Codable {

    /** Alliance name, may be null. */
    public var name: String?
    public var backup: TBAEliminationAllianceBackup?
    /** List of teams that declined the alliance. */
    public var declines: [String]?
    /** List of team keys picked for the alliance. First pick is captain. */
    public var picks: [String]
    public var status: TBAEliminationAllianceStatus?


    
    public init(name: String?, backup: TBAEliminationAllianceBackup?, declines: [String]?, picks: [String], status: TBAEliminationAllianceStatus?) {
        self.name = name
        self.backup = backup
        self.declines = declines
        self.picks = picks
        self.status = status
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(name, forKey: "name")
        try container.encodeIfPresent(backup, forKey: "backup")
        try container.encodeIfPresent(declines, forKey: "declines")
        try container.encode(picks, forKey: "picks")
        try container.encodeIfPresent(status, forKey: "status")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        name = try container.decodeIfPresent(String.self, forKey: "name")
        backup = try container.decodeIfPresent(TBAEliminationAllianceBackup.self, forKey: "backup")
        declines = try container.decodeIfPresent([String].self, forKey: "declines")
        picks = try container.decode([String].self, forKey: "picks")
        status = try container.decodeIfPresent(TBAEliminationAllianceStatus.self, forKey: "status")
    }
}

